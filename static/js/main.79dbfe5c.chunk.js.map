{"version":3,"sources":["components/myRouter/MyRouterElements.jsx","Featches.js","redux/actions/index.js","components/PlaceWeather/index.js","components/main/mainElements.jsx","components/main/index.js","components/favorites/favoritesElements.jsx","components/favorites/index.js","components/myRouter/index.js","App.js","reportWebVitals.js","redux/reducers/listReducers.js","redux/reducers/locationReducers.js","redux/reducers/darkModeReducers.js","redux/reducers/isFahrenheitReducers.js","redux/reducers/index.js","index.js"],"names":["Div","styled","div","ProvidedKey","fetchAutocompleteSearch","location","a","fetch","response","json","fetchCurrentCondition","locationKey","fetch5DaysofDailyForecasts","isMetric","lat","lon","ADD_ITEM","REMOVE_ITEM","SET_LOCATION","SET_DARKMODE","SET_ISFAHRENHEIT","setLocation","type","payload","PlaceWeather","props","dispatch","useDispatch","addToList","item","remomeFromList","items","useSelector","state","list","isfahrenheit","isFahrenheit","isOnFavorite","some","key","Key","undefined","temp","nextdaystemp","days","DailyForecasts","map","day","dt","Date","style","textAlign","border","toString","split","Number","Temperature","Maximum","Value","Minimum","toFixed","EpochDate","width","colSpan","display","justifyContent","LocalizedName","Imperial","Metric","alignSelf","IconButton","color","onClick","height","marginBottom","marginTop","WeatherText","DarkMode","Main","useState","chosenLocation","SetChosenLocation","chosenLocationTemp","SetChosenLocationTemp","chosenLocation5DaysTemp","SetChosenLocation5DaysTemp","errorMsg","SetErrorMsg","isOn","ChangeLocation","showPosition","position","fetchGeopositionSearch","coords","latitude","longitude","then","HasSetPlace","e","indexOf","forEach","word","test","x","y","z","error","console","log","useEffect","TextField","id","label","helperText","autoComplete","filter","maxWidth","backgroundColor","onChange","target","value","navigator","geolocation","getCurrentPosition","DivElement","Favorites","history","useHistory","dataList","setDataList","moveTo","name","push","setTheDataList","Promise","all","results","res","length","showItems","index","MyRouter","ChangeDarkMode","setdarkmode","Changeisfahrenheit","setisfahrenheit","to","Button","variant","exact","path","marginLeft","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","manageList","action","isExist","i","ele","reducer","combineReducers","enhancers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79dbfe5c.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const Div = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-evenly;\r\n\r\n`","const ProvidedKey = \"PPnGsGhA3ETXd07a3gLfDkDay7RJPumj\";\r\n\r\n\r\nexport async function fetchAutocompleteSearch(location) {\r\n    let response = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${ProvidedKey}&q=${location}`)\r\n    return await response.json();\r\n}\r\nexport async function fetchCurrentCondition(locationKey) {\r\n     let response = await fetch(`http://dataservice.accuweather.com/currentconditions/v1/${locationKey}?apikey=${ProvidedKey}`)\r\n     return await response.json();\r\n}\r\n\r\nexport async function fetch5DaysofDailyForecasts(locationKey, isMetric) {\r\n    let response = await fetch(`http://dataservice.accuweather.com/forecasts/v1/daily/5day/${locationKey}?apikey=${ProvidedKey}&metric=${isMetric}`)\r\n    return await response.json();\r\n}\r\n\r\nexport async function fetchGeopositionSearch(lat, lon) {\r\n    let response = await fetch(`http://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${ProvidedKey}&q=${lat}%2C${lon}`)\r\n    return await response.json();\r\n}","/*\r\n* action types\r\n*/\r\nexport const ADD_ITEM = 'ADD_ITEM'\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM'\r\nexport const SET_LOCATION = 'SET_LOCATION'\r\nexport const SET_DARKMODE = 'SET_DARKMODE'\r\nexport const SET_ISFAHRENHEIT = 'SET_ISFAHRENHEIT'\r\n\r\n/*\r\n* action creators\r\n*/\r\nexport function addItem(text) {\r\n    return { type: ADD_ITEM, payload: text }\r\n}\r\nexport function removeItem(text) {\r\n    return { type: REMOVE_ITEM, payload: text }\r\n}\r\nexport function setLocation(location) {\r\n    return { type: SET_LOCATION, payload: location }\r\n}\r\nexport function setdarkmode(isOn) {\r\n    return { type: SET_DARKMODE, payload: isOn }\r\n}\r\nexport function setisfahrenheit(isfahrenheit) {\r\n    return { type: SET_ISFAHRENHEIT, payload: isfahrenheit }\r\n}","import FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { addItem, removeItem } from '../../redux/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction PlaceWeather(props) {\r\n\r\n    const dispatch = useDispatch();\r\n    const addToList = item => dispatch(addItem(item));\r\n    const remomeFromList = item => dispatch(removeItem(item));\r\n    const items = useSelector(state => state.list.items);\r\n    const isfahrenheit = useSelector(state => state.isFahrenheit);\r\n    const isOnFavorite = items && props.location && items.some(item => item.key === props.location.Key);\r\n\r\n\r\n\r\n    if (props.location !== undefined && props.temp !== undefined && props.nextdaystemp !== undefined) {\r\n\r\n        const days = props.nextdaystemp.DailyForecasts.map(day => {\r\n            var dt = new Date(day.Date);\r\n            return (\r\n                <td key={day.EpochDate} style={{ textAlign: 'center', border: '1px solid' }}>\r\n                    <h4>{dt.toString().split(' ')[0]}</h4>\r\n                    <h5>\r\n                        {Number((day.Temperature.Maximum.Value + day.Temperature.Minimum.Value) / 2).toFixed(1)} </h5>\r\n                </td>\r\n            )\r\n        }\r\n        );\r\n\r\n        const toggleFavorites = () => {\r\n            if (isOnFavorite) {\r\n                remomeFromList({ 'key': props.location.Key, 'name': props.location.LocalizedName })\r\n            }\r\n            else {\r\n                addToList({ 'key': props.location.Key, 'name': props.location.LocalizedName })\r\n            }\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <table style={{ width: '600px', border: '1px solid' }}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th colSpan='5' >\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <span style={{ width: '30%' }}>\r\n                                        <h4>{props.location.LocalizedName}</h4>\r\n\r\n                                        <h5>{!isfahrenheit ? props.temp.Temperature.Metric.Value : props.temp.Temperature.Imperial.Value} </h5>\r\n                                    </span>\r\n                                    <span style={{ width: '30%', alignSelf: 'center' }}>\r\n                                        <IconButton color=\"secondary\" onClick={() => { toggleFavorites() }}  >\r\n                                            {isOnFavorite ? <FavoriteIcon style={{ width: '2.3rem', height: '2.3rem' }} /> : <FavoriteBorderIcon style={{ width: '2.3rem', height: '2.3rem' }} />}\r\n                                        </IconButton>\r\n\r\n                                    </span>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr >\r\n                            <td colSpan='5' style={{ textAlign: 'center' }}>\r\n                                <h1 style={{ marginBottom: '20px', marginTop: '0px' }}>{props.temp.WeatherText}</h1>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            {days}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n    else {\r\n        return null\r\n\r\n    }\r\n}\r\n\r\nexport default PlaceWeather;\r\n","import styled from 'styled-components'\r\n\r\nexport const Div = styled.div`\r\n// display: flex;\r\n// flex-direction: row;\r\n// justify-content: space-evenly;\r\ncolor: ${props => {\r\n    return props.DarkMode ? \"white\" : \"black\"\r\n    }};\r\ntext-align: -webkit-center;\r\n\r\n`","import TextField from '@material-ui/core/TextField';\r\nimport { useEffect, useState } from 'react';\r\nimport { fetch5DaysofDailyForecasts, fetchAutocompleteSearch, fetchCurrentCondition } from '../../Featches';\r\nimport PlaceWeather from '../PlaceWeather';\r\nimport { Div } from './mainElements';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchGeopositionSearch } from '../../Featches';\r\nimport { BiCurrentLocation } from 'react-icons/bi';\r\nimport { setLocation } from '../../redux/actions';\r\n\r\nfunction Main() {\r\n\r\n    const [chosenLocation, SetChosenLocation] = useState()\r\n    const [chosenLocationTemp, SetChosenLocationTemp] = useState()\r\n    const [chosenLocation5DaysTemp, SetChosenLocation5DaysTemp] = useState()\r\n    const [errorMsg, SetErrorMsg] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n    const isfahrenheit = useSelector(state => state.isFahrenheit);\r\n    const isOn = useSelector(state => state.isOn);\r\n    const location = useSelector(state => state.location);\r\n    const ChangeLocation = item => dispatch(setLocation(item));\r\n\r\n    useEffect(() => { HasSetPlace(location) }, [])\r\n    useEffect(() => {\r\n        HasSetPlace(location)\r\n    }, [isfahrenheit])\r\n\r\n\r\n    function getLocation() {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(showPosition);\r\n        } else {\r\n            console.log(\"Geolocation is not supported by this browser.\");\r\n        }\r\n    }\r\n    function showPosition(position) {\r\n        fetchGeopositionSearch(position.coords.latitude,\r\n            position.coords.longitude).then((item) => {\r\n                ChangeLocation(item.LocalizedName);\r\n                HasSetPlace(item.LocalizedName)\r\n            })\r\n    }\r\n\r\n\r\n    async function HasSetPlace(e) {\r\n        SetErrorMsg(false);\r\n        if (e === null || e === \"\") {\r\n\r\n            e = location\r\n            if (e === null || e === \"\" || e === undefined) {\r\n                e = 'tel aviv'\r\n            }\r\n        }\r\n        else {\r\n            if (e.indexOf(' ') >= 0) {\r\n                e.split(' ').forEach(word => {\r\n                    if (/[^a-zA-Z]/.test(word)) {\r\n                        SetErrorMsg(\"Need to contain letters only\")\r\n                    }\r\n                });\r\n            }\r\n            else if (/[^a-zA-Z]/.test(e)) {\r\n                SetErrorMsg(\"Need to contain letters only\");\r\n            }\r\n        }\r\n\r\n\r\n        try {\r\n            fetchAutocompleteSearch(e).then((x) => {\r\n                ChangeLocation( x[0].LocalizedName)\r\n                SetChosenLocation(x[0])\r\n                fetchCurrentCondition(x[0].Key).then((y) => {\r\n                    SetChosenLocationTemp(y[0])\r\n                    fetch5DaysofDailyForecasts(x[0].Key, !isfahrenheit).then((z) => {\r\n                        SetChosenLocation5DaysTemp(z)\r\n                    })\r\n                })\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Div DarkMode={isOn}>\r\n            <TextField\r\n                id=\"standard-search-a-location-input\"\r\n                label=\"Search a location\"\r\n                helperText={errorMsg}\r\n                type=\"Search a location\"\r\n                autoComplete=\"current-search-a-location\"\r\n                style={isOn ? { filter: 'invert(1)', maxWidth: '500px', backgroundColor: 'white' } :\r\n                    { color: 'red', maxWidth: '500px', backgroundColor: 'white' }}\r\n                onChange={(e) => { HasSetPlace(e.target.value) }}\r\n            />\r\n            <BiCurrentLocation\r\n                onClick={() => getLocation()}\r\n                style={isOn ? { marginTop: '1%', color: 'white', width: '5%', height: '5%' } :\r\n                    { marginTop: '1%', width: '5%', height: '5%' }} />\r\n            <br /><br />\r\n            <PlaceWeather\r\n                location={chosenLocation}\r\n                temp={chosenLocationTemp}\r\n                nextdaystemp={chosenLocation5DaysTemp}\r\n            />\r\n        </Div>\r\n    );\r\n}\r\n\r\n\r\nexport default Main;\r\n\r\n","import styled from 'styled-components'\r\n\r\nexport const Div = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-evenly;\r\ncolor:${props => props.DarkMode ? 'white' : 'black'}\r\n\r\n`\r\nexport const DivElement = styled.div`\r\ntext-align: center;\r\nborder: 1px solid;\r\nwidth:15%;\r\n\r\n\r\n`","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchCurrentCondition } from '../../Featches';\r\nimport { Div, DivElement } from './favoritesElements';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { setLocation } from '../../redux/actions';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Favorites(props) {\r\n    const dispatch = useDispatch();\r\n    const ChangeLocation = item => dispatch(setLocation(item));\r\n\r\n    const items = useSelector(state => state.list.items || []);\r\n\r\n\r\n    const history = useHistory();\r\n    const isOn = useSelector(state => state.isOn);\r\n    const [dataList, setDataList] = useState(() => [])\r\n    const isfahrenheit = useSelector(state => state.isFahrenheit);\r\n\r\n    const moveTo = (name) => {\r\n        ChangeLocation(name)\r\n        return history.push('/');\r\n    }\r\n\r\n    const setTheDataList = async () => {\r\n        const results = await Promise.all(\r\n            items.map((item) =>\r\n                fetchCurrentCondition(item.key)\r\n            )\r\n        );\r\n\r\n        setDataList(\r\n            results.map(res => res[0])\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (items.length > 0) {\r\n            setTheDataList();\r\n        }\r\n    }, [items]);\r\n\r\n    if (items.length > 0) {\r\n        var showItems = dataList.map((item, index) => {\r\n            return (\r\n                <DivElement key={index} onClick={() => { moveTo(items[index].name) }}>\r\n                    <h2>{items[index].name}</h2>\r\n                    <br />\r\n                    <h3>{!isfahrenheit ? item.Temperature.Metric.Value : item.Temperature.Imperial.Value}</h3>\r\n                    <br />\r\n                    <h3>{item.WeatherText}</h3>\r\n                </DivElement>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <br /><br />\r\n                <Div DarkMode={isOn}>\r\n                    {showItems}\r\n                </Div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <h2 style={isOn ? { color: 'white', textAlign: 'center' } :\r\n                { textAlign: 'center' }\r\n            }> There are no favorites to display yet</h2 >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Favorites;\r\n\r\n\r\n","import Button from '@material-ui/core/Button';\r\nimport { Div } from './MyRouterElements'\r\nimport React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from 'react-router-dom';\r\nimport Main from '../main/index';\r\nimport Favorites from '../favorites';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setdarkmode, setisfahrenheit } from '../../redux/actions';\r\nimport SettingsBrightnessIcon from '@material-ui/icons/SettingsBrightness';\r\nimport { RiFahrenheitFill, RiCelsiusFill } from 'react-icons/ri';\r\n\r\nfunction MyRouter() {\r\n    const dispatch = useDispatch();\r\n    const ChangeDarkMode = isOn => dispatch(setdarkmode(isOn));\r\n    const isOn = useSelector(state => state.isOn);\r\n    const Changeisfahrenheit = isFahrenheit => dispatch(setisfahrenheit(isFahrenheit));\r\n    const isfahrenheit = useSelector(state => state.isFahrenheit);\r\n\r\n    return (\r\n        <div >\r\n            <Router>\r\n                <Div>\r\n                    <Link to=\"/\">\r\n                        <Button variant=\"outlined\"\r\n                            style={{ border: 'splid 1px ' }}\r\n                            style={isOn ? { filter: 'invert(1)', border: 'splid 1px ' } :\r\n                                { border: 'splid 1px ' }}>\r\n                            main\r\n                        </Button>\r\n                    </Link>\r\n                    <Link to=\"/favorites\">\r\n                        <Button variant=\"outlined\" style={isOn ? { filter: 'invert(1)', border: 'splid 1px ' } :\r\n                            { border: 'splid 1px ' }}>\r\n                            favorites\r\n                        </Button>\r\n                    </Link>\r\n\r\n                </Div>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <Main isOn={isOn} />\r\n                        ‫‫​‫​‫​‫​‫​‫​‫​‫​‫​‫​‫‫​‫​‫‫​‫​‫‫​‫​‫‫​‫​‫‫​‫​‫‫​‫‫‫‫​‫​‫‫​‫​‫​‫​‫‫​‫​‫​‫‫​‫‫‫​‫​‫​‫‫​‫​‫‫‫​‫​‫​‫‫​‫​‫‫‫​‫‫​‫‫​‫‫​‫​‫​‫​‫‫‫​‫‫‫​‫​‫‫​‫​‫‫​‫​‫‫​‫​‫​‫​‫‫​‫‫‫​‫‫‫​‫‫​‫‫​‫‫​‫​‫​‫‫​‫‫​‫​‫​‫​‫‫‫​‫‫‫​‫‫‫​‫​‫‫​‫​‫​‫‫‫​‫​‫​‫‫‫​‫​‫​‫‫​‫‫‫‫​‫​‫‫​‫​‫​‫​‫​‫‫​‫‫​‫‫​‫​‫‫​‫‫​‫‫​‫​‫​‫​‫​‫​‫‫‫‫​‫​‫‫‫‫‫​‫​‫‫‫​‫‫​‫​‫​‫‫​‫‫‫‫​‫‫‫​‫​‫​‫‫​‫‫​‫​‫‫​‫​‫​‫​‫‫‫​‫‫​‫‫​‫‫‫​‫​‫​‫‫​‫‫​‫‫‫​‫‫​‫‫​‫‫​‫‫‫​‫‫‫‫​‫​‫‫​‫​‫‫​‫​‫​‫​‫​‫‫​‫​‫‫‫‫​‫‫‫​‫​‫​‫​‫​‫‫‫‫​‫​‫‫‫‫\r\n                    </Route>\r\n                    <Route path=\"/favorites\">\r\n                        <Favorites isOn={isOn} />\r\n                    </Route>\r\n\r\n                </Switch>\r\n            </Router >\r\n            <div style={{ textAlign: 'center' }}>\r\n                <SettingsBrightnessIcon\r\n                    style={isOn ? { color: 'white', width: '10%', height: '10%' } :\r\n                        { width: '10%', height: '10%' }}\r\n                    onClick={() => { ChangeDarkMode(!isOn) }}></SettingsBrightnessIcon>\r\n                <span style={{ marginLeft: '15%' }} />\r\n                {isfahrenheit ?\r\n                    <RiFahrenheitFill onClick={() => Changeisfahrenheit(!isfahrenheit)}\r\n                        style={isOn ? { color: 'white', width: '10%', height: '10%' } :\r\n                            { width: '10%', height: '10%' }} />\r\n                    :\r\n                    <RiCelsiusFill onClick={() => Changeisfahrenheit(!isfahrenheit)}\r\n                        style={isOn ? { color: 'white', width: '10%', height: '10%' } :\r\n                            { width: '10%', height: '10%' }}\r\n                    />}\r\n\r\n              \r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyRouter;\r\n","import MyRouter from \"./components/myRouter\";\nimport { setLocation } from './redux/actions';\nimport { useSelector } from 'react-redux';\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const ChangeLocation = item => dispatch(setLocation(item));\n  const isOn = useSelector(state => state.isOn);\n\n  var darkMode = false;\n  useEffect(() => {\n    ChangeLocation('tel aviv')\n  },\n    [])\n  return (\n    <div style={isOn ? { backgroundColor: \"black\", height: \"100vh\" } : null}>\n      <MyRouter />\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    ADD_ITEM,\r\n    REMOVE_ITEM\r\n} from '../actions'\r\n\r\nconst initialState = {\r\n    items: [],\r\n};\r\n\r\nfunction manageList(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            var isExist = false;\r\n            state.items.forEach(i => {\r\n                if (i.key === action.payload.key) {\r\n                    isExist = true;\r\n                }\r\n            })\r\n            return isExist ? { items: [...state.items] } : { items: [...state.items, action.payload] };\r\n\r\n        case REMOVE_ITEM:\r\n            var isExist = false;\r\n            state.items.forEach(i => {\r\n                if (i.key === action.payload.key) {\r\n                    isExist = true;\r\n                }\r\n            })\r\n            if (isExist) {\r\n                let a = state.items.filter(function (ele) {\r\n                    return ele.key != action.payload.key;\r\n                });\r\n                return { items: a }\r\n            }\r\n            else {\r\n               return { items: state.items }\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default manageList;","import {\r\n    SET_LOCATION,\r\n} from '../actions'\r\n\r\nconst initialState = '';\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOCATION:\r\n            return action.payload;\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer;","import {\r\n    SET_DARKMODE\r\n} from '../actions'\r\n\r\nconst initialState = '';\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_DARKMODE:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer;","import {\r\n    SET_ISFAHRENHEIT\r\n} from '../actions'\r\n\r\nconst initialState = false;\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_ISFAHRENHEIT:\r\n            return action.payload;\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default reducer;","import { combineReducers } from 'redux'\r\n\r\nimport list from './listReducers';\r\nimport location from './locationReducers';\r\nimport isOn from './darkModeReducers';\r\nimport isFahrenheit from './isFahrenheitReducers';\r\nexport default combineReducers({\r\n    list,\r\n    location,\r\n    isOn, \r\n    isFahrenheit\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport { createStore, compose } from 'redux';\nimport rootReducer from './redux/reducers'\n\n\nconst enhancers = compose(\n  window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nconst store = createStore(rootReducer, enhancers);\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}